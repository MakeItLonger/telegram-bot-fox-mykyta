const TelegramAPI = require('node-telegram-bot-api');

// const express = require('express');
// const app = express();

// app.get('/', (req, res) => {
//   res.send('Hello, world!');
// });

// const PORT = 3000;
// app.listen(PORT, () => {
//   console.log(`Server listening on port ${PORT}`);
// });

const token = '5996933740:AAFI7r5WTXdljEABkbnZxoWRPYBRVo9ryJU';

const bot = new TelegramAPI(token, { polling: true });

bot.setMyCommands([
  { command: '/digest', description: '–ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –∑—É—Å—Ç—Ä—ñ—á—ñ' },
  { command: '/poll', description: '–î–µ—Ñ–æ–ª—Ç–Ω–µ —â–æ—Ç–∏–∂–Ω–µ–≤–µ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è' },
  { command: '/quiz', description: '–ö–≤—ñ–∑ –ø–æ –æ—Å—Ç–∞–Ω–Ω—å–æ–º—É –∑–∞–Ω—è—Ç—Ç—é' }
])

let pollID;
const chatID = '-1001746865137';
let messageID;
let currentCorrectAnswer;

const lastDigest = 'https://t.me/c/1588797053/11';
const digestChannel = 'https://t.me/+hv39AdBv7zc4ZTgy';

let answers = {};

const questionsQuiz = [
  '–ß–∏ –≤—ñ–¥–º–æ–≤–∏–ª–∏—Å—å –∞–ø–æ—Å—Ç–æ–ª–∏ –ø–æ–≤–Ω—ñ—Å—Ç—é –≤—ñ–¥ –≤—Å—ñ—Ö —Ç—Ä–∞–¥–∏—Ü—ñ–π –ø–æ–≤\'—è–∑–∞–Ω–∏—Ö —ñ–∑ –ó–∞–∫–æ–Ω–æ–º?',
  '–ö–æ–≥–æ –ü–µ—Ç—Ä–æ —Ç–∞ –Ü–≤–∞–Ω –∑—É—Å—Ç—Ä—ñ–ª–∏ —É –≤–æ—Ä—ñ—Ç —Ö—Ä–∞–º—É?',
  '–©–æ –≤—ñ–¥–±—É–≤–∞–ª–æ—Å—å –º—ñ–∂ –∞–ø–æ—Å—Ç–æ–ª–∞–º–∏ —Ç–∞ –∫—É–ª—å–≥–∞–≤–∏–º –∫–æ–ª–∏ –≤–æ–Ω–∏ —Ç—ñ–ª—å–∫–∏-–Ω–æ –∑—É—Å—Ç—Ä—ñ–ª–∏—Å—å?',
  '–Ø–∫ –Ω–∞–∑–∏–≤–∞–ª–∏—Å—å –≤–æ—Ä–æ—Ç–∞ —Ö—Ä–∞–º—É –±—ñ–ª—è —è–∫–∏—Ö —Å–∏–¥—ñ–≤ –∫—É–ª—å–≥–∞–≤–∏–π?',
  '–©–æ –¥–∞–≤ –ü–µ—Ç—Ä–æ –∫—É–ª—å–≥–∞–≤–æ–º—É?',
  '–ó–∞–≤–¥—è–∫–∏ –∫–æ–º—É/—á–æ–º—É —Å—Ç–∞–ª–æ—Å—å –∑—Ü—ñ–ª–µ–Ω–Ω—è?',
  '–ö–æ–≥–æ –∑–≤—ñ–ª—å–Ω–∏–ª–∏ —é–¥–µ—ó –ø—ñ–¥ —á–∞—Å —Å–≤—è—Ç–∞ –ü–∞—Å—Ö–∏ –∑–∞ –¥–∞–≤–Ω—ñ–º –∑–≤–∏—á–∞—î–º?',
  '–•—Ç–æ —î –≤–∏–Ω–Ω–∏–º –≤ —Å–º–µ—Ä—Ç—ñ –Ü—Å—É—Å–∞ –•—Ä–∏—Å—Ç–∞?',
  '–•—Ç–æ/—â–æ –∑–∞–≤–∂–¥–∏ –∑–≤—ñ—â–∞–ª–æ –º–∞–π–±—É—Ç–Ω—ñ–π –ø—Ä–∏—Ö—ñ–¥ –•—Ä–∏—Å—Ç–∞?',
  '–í —è–∫—ñ–π —á–∞—Å—Ç–∏–Ω—ñ —Ö—Ä–∞–º—É –∑—ñ–±—Ä–∞–ª–∏—Å—å –ª—é–¥–∏, —â–æ–± –ø–æ—Å–ª—É—Ö–∞—Ç–∏ –ø—Ä–æ–ø–æ–≤—ñ–¥—å?'];
const optionsQuiz = [
  ['–¢–∞–∫. –•—Ä–∏—Å—Ç–æ—Å —Å–∫–∞—Å—É–≤–∞–≤ –ó–∞–∫–æ–Ω —ñ –≤—Å–µ, —â–æ —Ç–∞–º –Ω–∞–ø–∏—Å–∞–Ω–æ –Ω–µ–º–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è.', '–ù—ñ. –í–æ–Ω–∏ –∑–±–µ—Ä–µ–≥–ª–∏ –≤ —Å–µ—Ä—Ü—ñ —Ç—Ä–∞–¥–∏—Ü—ñ—ó —Ç–∞ –∑–≤–∏—á–∫–∏, —è–∫—ñ –ø—Ä–æ–¥–æ–≤–∂—É–≤–∞–ª–∏ —ó—Ö –¥—É—Ö–æ–≤–Ω–æ –∑–∞–±–∞–≥–∞—á—É–≤–∞—Ç–∏'],
  ['–ö—É–ª—å–≥–∞–≤–æ–≥–æ', '–°–ª—ñ–ø–æ–≥–æ', '–ü—Ä–æ–∫–∞–∂–µ–Ω–æ–≥–æ', '–•–≤–æ—Ä–æ–≥–æ –Ω–∞ COVID-19'],
  ['–ú–æ–ª–∏–ª–∏—Å—å', '–°–ø–æ–≤—ñ–¥—É–≤–∞–ª–∏—Å—å', '–ó–Ω–∞–π–æ–º–∏–ª–∏—Å—å', '–î–∏–≤–∏–ª–∏—Å—å –æ–¥–∏–Ω –Ω–∞ –æ–¥–Ω–æ–≥–æ'],
  ['–§–∞–π–Ω—ñ', '–î–æ–±—Ä—ñ', '–ì–∞—Ä–Ω—ñ', '–ß–µ—Ä–≤–æ–Ω—ñ'],
  ['–°—Ä—ñ–±–ª–æ', '–ó–æ–ª–æ—Ç–æ', '–ë—ñ–±–ª—ñ—é', '–ó—Ü—ñ–ª–µ–Ω–Ω—è'],
  ['–ë–ª–∞–≥–æ—á–µ—Å—Ç—é –ü–µ—Ç—Ä–∞', '–ë–ª–∞–≥–æ—á–µ—Å—Ç—é –Ü–≤–∞–Ω–∞', '–í—ñ—Ä—ñ –∫—É–ª—å–≥–∞–≤–æ–≥–æ', '–ì–æ—Å–ø–æ–¥—É'],
  ['–î—É—à–æ–≥—É–±—Ü—è', '–ó–∞—Å–Ω–æ–≤–Ω–∏–∫–∞ –∂–∏—Ç—Ç—è'],
  ['–õ—é–¥–∏ –≤ —Ö—Ä–∞–º—ñ, —è–∫–∏—Ö –∑–≤–∏–Ω—É–≤–∞—á—É–≤–∞–≤ –ü–µ—Ç—Ä–æ', '–¢—ñ, —è–∫—ñ –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –≥–æ–ª–æ—Å—É–≤–∞–ª–∏ –∑–∞ –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è –í–∞—Ä–∞–≤–≤–∏', '–í—Å—ñ –µ–≤—Ä–µ—ó', '–í—Å—ñ –ª—é–¥–∏'],
  ['–¶–∞—Ä—ñ —Ç–∞ —Å—É–¥–¥—ñ', '–§–∞—Ä–∏—Å–µ—ó —Ç–∞ —Å–∞–¥—É–∫–µ—ó', '–ó–∞–∫–æ–Ω —Ç–∞ –ü—Ä–æ—Ä–æ–∫–∏', '–ê–¥–∞–º —Ç–∞ –Ñ–≤–∞'],
  ['–ö–æ—Ä–∏–¥–æ—Ä –ê–≤—Ä–∞–º–∞', '“ê–∞–Ω–æ–∫ –°–æ–ª–æ–º–æ–Ω–∞', '–°—Ç—ñ–Ω–∞ –î–∞–≤–∏–¥–∞', '–ö—É–ø–æ–ª –ô–æ—Å–∏–ø–∞']];
const correctAnswersQuiz = [1, 0, 3, 2, 3, 3, 0, 3, 2, 1];

bot.on('new_chat_members', (msg) => {
  const newMembers = msg.new_chat_members
  console.log(msg)
  const newMembersArr = newMembers.map((member) => {
    const tagName = member.username ? '@' + member.username : null;
    return tagName ?? member.first_name;
  });

  const stringMembers = newMembersArr.join(', ');


  bot.sendMessage(chatID, `–†–∞–¥—ñ –≤—ñ—Ç–∞—Ç–∏ —Ç–µ–±–µ, ${stringMembers}! –ì–æ—Å–ø–æ–¥—å —Ü—ñ–Ω–∏—Ç—å —Ç–≤–æ—î –±–∞–∂–∞–Ω–Ω—è –≤–∏–≤—á–∞—Ç–∏ –ë–æ–∂–µ –°–ª–æ–≤–æ. –ó–∞–≥–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é —Ç–∏ –º–æ–∂–µ—à –∑–Ω–∞–π—Ç–∏ –≤ –æ–ø–∏—Å—ñ –≥—Ä—É–ø–∏. –Ø–∫—â–æ —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –º–æ—è –¥–æ–ø–æ–º–æ–≥–∞, –∫–æ—Ä–∏—Å—Ç—É–π—Å—è –∫–æ–º–∞–Ω–¥–∞–º–∏ –≤ –ø—Ä–∞–≤–æ–º—É –Ω–∏–∂–Ω—å–æ–º—É –∫—É—Ç—ñ —á–∞—Ç—É - [/] –∞–±–æ –Ω–∞–±–∏—Ä–∞–π —Ä—É—Ü—è–º–∏ '/'`);
})



bot.on('poll_answer', ({ poll_id, user, option_ids: [answer] }) => {
  const tagName = user.username ? '@' + user.username : null;
  const fullName = user.first_name && user.last_name ? user.first_name + ' ' + user.last_name : null;
  const username = tagName ?? fullName ?? user.first_name;
  if (poll_id === pollID) {
    if (currentCorrectAnswer === answer) {
      if (answers[username]) {
        answers[username][0] = answers[username][0] + 1;
        answers[username][1] = answers[username][1] + 1;
      } else {
        answers[username] = [1, 1];
      }
    } else {
      if (!answers[username]) {
        answers[username] = [0, 1];
      } else {
        answers[username][1] = answers[username][1] + 1;
      }
    }
  }
});

bot.on('message', async (msg) => {
  const text = msg.text ? msg.text : null;
  const chatID = msg.chat.id;
  //const channelID = -1001588797053;
  if (text && text.toLowerCase().startsWith('/digest')) {
    const message = `[–ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –∑—É—Å—Ç—Ä—ñ—á—ñ](${lastDigest})\\. –©–æ–± –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Å–ø—Ä–∞—Ü—é–≤–∞–ª–æ  —Ç—Ä–µ–±–∞ –±—É—Ç–∏ –ø—ñ–¥–ø–∏—Å–∞–Ω–∏–º –Ω–∞ [–∫–∞–Ω–∞–ª](${digestChannel})\\.`;

    bot.sendMessage(chatID, message, { parse_mode: 'MarkdownV2' });
  }



  if (text && text.toLowerCase().startsWith('/quiz')) {

    let quizResults = '–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∫–≤—ñ–∑—É:\n';
    let place = 0;

    for (let i = 0; i < questionsQuiz.length; i++) {
      await bot.sendPoll(chatID, `${i + 1}. ${questionsQuiz[i]}`, optionsQuiz[i], {
        is_anonymous: false,
        allowsMultipleAnswers: false,
        type: 'quiz',
        open_period: 25,
        correct_option_id: correctAnswersQuiz[i]
      }).then(res => {
        isAnswered = false;
        messageID = res.message_id;
        pollID = res.poll.id;
        currentCorrectAnswer = correctAnswersQuiz[i];
      })
      await new Promise(resolve => setTimeout(resolve, 25000));

      await bot.deleteMessage(chatID, messageID);

    }

    const sortedAnswers = Object.fromEntries(Object.entries(answers).sort((a, b) => b[1][0] - a[1][0]));

    for (let key in sortedAnswers) {
      place++;
      quizResults += `\n${place}. ${key} - ${answers[key][0]}/${answers[key][1]} (${Math.round(answers[key][0] * 100 / answers[key][1])}%)`
    }

    bot.sendMessage(chatID, quizResults);

    answers = {};
  }

  if (text && text.toLowerCase().startsWith('/poll')) {
    let newStr;
    let indexOfFirstSpace;
    if (text.includes(' ')) {
      indexOfFirstSpace = text.indexOf(' ') + 1;
      newStr = text.slice(indexOfFirstSpace);
    }

    const optionsArr = !newStr ? [] : newStr.split(',');


    const [place = '–¶–µ—Ä–∫–≤–∞ –ë–ª–∞–≥–æ–¥–∞—Ç—å', time = '19:00', date = '–≤ —á–µ—Ç–≤–µ—Ä'] = optionsArr.map(item => item.trim());

    const question = `–•—Ç–æ –ø–ª–∞–Ω—É—î –±—É—Ç–∏ –Ω–∞ –¥–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—ñ –°–ª–æ–≤–∞ ${date} –æ ${time}? –ú—ñ—Å—Ü–µ –∑—É—Å—Ç—Ä—ñ—á—ñ - ${place}`;
    const options = ['–¢–∞–∫, –ø–ª–∞–Ω—É—é –±—É—Ç–∏!! üòá', '–ù—ñ, –Ω–∞ –∂–∞–ª—å –Ω–µ –º–æ–∂—É... :( üòà'];

    bot.sendPoll(chatID, question, options, {
      is_anonymous: false,
      allowsMultipleAnswers: false,
      type: 'regular'
    })
  }
})